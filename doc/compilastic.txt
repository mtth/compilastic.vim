*compilastic.txt*   I compile, you compile.                             v1.0.0
*Compilastic*

|:make| for busy people.

==============================================================================
CONTENTS                                                 *CompilasticContents*

    1. Intro .............................. |CompilasticIntro|
    2. Commands ........................ |CompilasticCommands|
      2.1 |:Compile|
      2.2 |:Cinfo|
      2.3 |:Cview|
      2.4 |:Crun|
    3. Mappings ........................ |CompilasticMappings|
    4. Configuration ..................... |CompilasticConfig|
      4.1  |g:compilastic_default_flags|
      4.2  |g:compilastic_mappings|
      4.2  |g:compilastic_upper_limit|
    5. Changes .......................... |CompilasticChanges|


==============================================================================
1. Intro                                                    *CompilasticIntro*

Compilastic provides a simple interface to |:make| with the following 
features:

* Store global and file specific compiling options to avoid having to enter 
  them every time (respectively in your .vimrc and in the corresponding file).
* Compile your file silently using |:Compile| so that you can stay focused on 
  the file being edited, no more distracting screen flickering.
* Execute and view the compiled output quickly using |:Crun| and |:Cview| 
  respectively.


==============================================================================
2. Commands                                              *CompilasticCommands*

Compilastic provides the following four commands:

------------------------------------------------------------------------------
2.1 :Compile[!] [<flags>]                                           *:Compile*

Compile file using current compiler and flags from the compilastic modeline. 
The compilastic modeline has the following format:
>
  <commentstring> make: <flags>
<
Compilastic performs command line expansion on <flags> (for example, you can 
use %:h for the folder of the current file). To insert a literal %, prepend it 
with a backslash. E.g. if the current compiler is HAML and you are editing the 
following file foo.haml:
>
  -# foo.haml
  !!!
  %html
    Hello world!
  -# make: -f html4 % %:r.html
<
Then |:Compile| will run the following commmand:
>
  haml -t ugly foo.haml foo.html
<
If no compilastic modeline is found in the |g:compilastic_upper_limit| lines 
at the bottom of the file, <flags> will default to the value found in 
|g:compilastic_default_flags| using the compiler's name as key.

Any <flags> passed to |:Compile| will be prepended to the modeline flags.

------------------------------------------------------------------------------
2.2 :Cinfo                                                            *:Cinfo*

Display information about current compiler options. Also prints out the 
expanded current compilation command (useful for debugging).

------------------------------------------------------------------------------
2.3 :Cview[!] [<prog>]                                                *:Cview*

View compiled file. With [!], recompile before viewing.

If <prog> is specified, open with that program instead. E.g. to view output in 
browser on a mac:
>
  :Cview open
<

In order for this command to work, compilastic has to know where the compiled 
file is. By default compilastic will look in the current working directory for 
a file with the same root as the one being edited. You can set the output file 
or directory by prepending it with & in the modeline. E.g. the following file:
>
  -# foo.haml
  !!!
  %html
    Hello world!
  -# make: % &%:r.html
<
This modeline tells compilastic that the compiled file can be found at 
foo.html. Note that if several & are used in the modeline, the first will be 
used to determine the output location.


------------------------------------------------------------------------------
2.4 :Crun[!] [<args>]                                                  *:Crun*

Run compiled file, passing any <args> as arguments. With [!], recompile before 
running (cf. |:Cview| for setting the path to the compiled file).


==============================================================================
3. Mappings                                              *CompilasticMappings*


These mappings can be disabled by setting the |g:compilastic_mappings| option 
to 0.

------------------------------------------------------------------------------
                                                                          *gc*
Compile file.

------------------------------------------------------------------------------
                                                                          *gC*
Compile file then:

* run compiled file if it is executable (e.g. when compiling C)
* view compiled file otherwise (e.g. when compiling HAML)


==============================================================================
4. Configuration                                           *CompilasticConfig*

You can tame Compilastic by changing the following options.

------------------------------------------------------------------------------
4.1 g:compilastic_default_flags                  *g:compilastic_default_flags*

Dictionary of compilation flags to use if no compilastic modeline if found in 
the current file. The dictionary is indexed by compiler name. To add your own 
or edit the current values, simply create and assign values to it directly:
>
  let g:compilastic_default_flags = {'my_compiler': '% &%:h/../build/'}
<

------------------------------------------------------------------------------
4.2 g:compilastic_mappings = 1                        *g:compilastic_mappings*

Create |gc| and |gC| mappings. Set to 0 to disable mappings.

------------------------------------------------------------------------------
4.3 g:compilastic_upper_limit = 5                  *g:compilastic_upper_limit*

Maximum number of lines from bottom which will be parsed to find the 
compilastic modeline.


==============================================================================
5. Changes                                                *CompilasticChanges*

v1.0.0 (?)
  * Initial stable release.
